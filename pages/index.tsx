import JSZip from "jszip";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
// import cloneDeep from "lodash/cloneDeep";
import { useEffect, useRef } from "react";
import { useDropzone } from "react-dropzone";
import { saveAs } from "file-saver";
import styles from "../styles/Home.module.css";

enum AnonymizeWorkerCallbackType {
  progress = "progress",
  dataAnonymized = "dataAnonymized",
  success = "success",
}

const Home: NextPage = () => {
  const { acceptedFiles, fileRejections, getRootProps, getInputProps } =
    useDropzone({
      accept: ".zip",
    });
  // Drop zone

  // useEffect(() => {
  //   if (acceptedFiles && acceptedFiles.length > 0) {
  //     const temp = cloneDeep(fileList).concat(acceptedFiles);
  //     setDicomImageList([]);
  //     setFileList(temp);
  //   }
  // }, [
  //   acceptedFiles,
  //   fileList,
  //   statusList,
  //   successUploadList,
  //   blobNameList,
  //   companyEmail,
  // ]);

  // Worker

  useEffect(() => {
    if (acceptedFiles.length > 0) {
      if (workerRef.current) {
        acceptedFiles.map(
          (file) =>
            workerRef.current &&
            workerRef.current.postMessage({ type: "file", payload: { file } })
        );
      }
    }
  }, [acceptedFiles]);

  const workerRef = useRef<Worker>();

  useEffect(() => {
    workerRef.current = new Worker(
      new URL("../workers/anonymiseWorker.worker.ts", import.meta.url)
    );
    workerRef.current.onmessage = ({ data }) => {
      if (data.type === AnonymizeWorkerCallbackType.progress) {
        console.log(data.payload.progress, data.payload.status);
      } else {
        console.log(data);
      }
      if (data.type === AnonymizeWorkerCallbackType.success) {
        // const zip = new JSZip(data.payload.anonymizedZip);
        saveAs(data.payload.anonymizedZip, "example.zip");
        // zip.generateAsync({ type: "blob" }).then(function (content) {
        // });
      }
    };
    return () => {
      workerRef.current?.terminate();
    };
  }, []);

  const handleOnclick = () => {
    console.log("BUTTON CLICKED");

    workerRef.current &&
      workerRef.current.postMessage({
        question:
          "The Answer to the Ultimate Question of Life, The Universe, and Everything.",
      });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <div {...getRootProps({ className: "dropzone" })}>
          <input
            style={{ borderColor: "tomato", borderWidth: "3px" }}
            {...getInputProps()}
          />
          {/* <h4>{fileRejectionItems}</h4> */}
          <h4>UPLOAD</h4>
          <h4>ONE MORE UPLOAD</h4>
        </div>

        <div className="files">
          {acceptedFiles.map((file) => (
            <h5 key={file.name}>
              {file.name} {file.size}
            </h5>
          ))}
        </div>

        <button onClick={handleOnclick}>UPLOAD DICOM</button>
        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
